# -*- coding: utf-8 -*-
"""db2excel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13MaftXtNaJLHITtO_v4YvRNZcACpb9XN
"""

pip install pandas openpyxl

import sqlite3
import pandas as pd
import sys
from pathlib import Path

def convert_db_to_excel_csv(db_path, output_format='excel'):
    """
    SQLite DB 파일을 Excel 또는 CSV 파일로 변환합니다.

    Parameters:
    db_path (str): SQLite DB 파일 경로
    output_format (str): 'excel' 또는 'csv' (기본값: 'excel')

    Returns:
    list: 생성된 파일 경로 목록
    """
    # DB 연결
    conn = sqlite3.connect(db_path)

    # 모든 테이블 이름 가져오기
    cursor = conn.cursor()
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    tables = cursor.fetchall()

    output_files = []
    db_name = Path(db_path).stem

    # 각 테이블을 개별 파일로 변환
    for table in tables:
        table_name = table[0]

        # SQL 쿼리로 데이터 읽기
        df = pd.read_sql_query(f"SELECT * FROM {table_name}", conn)

        # 출력 파일 경로 설정
        if output_format.lower() == 'excel':
            output_path = f"{db_name}_{table_name}.xlsx"
            df.to_excel(output_path, index=False, engine='openpyxl')
        else:
            output_path = f"{db_name}_{table_name}.csv"
            df.to_csv(output_path, index=False, encoding='utf-8-sig')

        output_files.append(output_path)

    # 연결 종료
    conn.close()

    return output_files

# 사용 예시
if __name__ == "__main__":
    db_file = "/content/drive/MyDrive/xst600_database.db"  # DB 파일 경로
    output_format = "excel"  # 'excel' 또는 'csv'

    try:
        converted_files = convert_db_to_excel_csv(db_file, output_format)
        print(f"변환된 파일들: {converted_files}")
    except Exception as e:
        print(f"에러 발생: {str(e)}")